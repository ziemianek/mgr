# ============================================================================== #
# header
# ============================================================================== #
---
# - name: Run docker compose up
#   community.docker.docker_compose_v2:
#     project_src: "{{ role_path }}/files"
#     project_name: taskmgr
#     build: always
#   register: output

# - name: Verify that api and db services are running
#   ansible.builtin.assert:
#     that:
#       - api_container.State == 'running'
#       - db_container.State == 'running'
#     fail_msg: "Couldn't properly start one or more services"
#     success_msg: "Successfully started all of the services"
#   vars:
#     api_container: >-
#       {{ output.containers | selectattr("Service", "equalto", "api") | first }}
#     db_container: >-
#       {{ output.containers | selectattr("Service", "equalto", "mysql") | first }}

# dep

- name: TBA
  block:
    - name: Render docker-compose template
      ansible.builtin.template:
        src: "{{ compose_template_path }}"
        dest: "{{ compose_rendered_template_path }}"
      register: output

    - name: Run docker compose up
      community.docker.docker_compose_v2:
        project_src: "{{ compose_rendered_template_path }}"
        project_name: "{{ project_name }}"
        build: always
      register: output
  # always:
  #   - name: Cleanup
  #     ansible.builtin.file:
  #       path: "{{ compose_rendered_template_path }}"
  #       state: absent
